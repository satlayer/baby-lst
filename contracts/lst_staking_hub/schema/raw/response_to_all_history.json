{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AllHistoryResponse",
  "type": "object",
  "required": [
    "history"
  ],
  "properties": {
    "history": {
      "description": "History of unstaking requests",
      "type": "array",
      "items": {
        "$ref": "#/definitions/UnstakeHistory"
      }
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "UnstakeHistory": {
      "type": "object",
      "required": [
        "batch_id",
        "lst_applied_exchange_rate",
        "lst_token_amount",
        "lst_withdraw_rate",
        "released",
        "time"
      ],
      "properties": {
        "batch_id": {
          "description": "Batch id of the unstake request",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "lst_applied_exchange_rate": {
          "description": "Exchange rate of the lst token at the time of withdrawal/slashing is applied to this rate",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        },
        "lst_token_amount": {
          "description": "Amount of lst token unstaked or burnt in the batch",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "lst_withdraw_rate": {
          "description": "Exchange rate of the lst token at the time of unstake/burning of lst token",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        },
        "released": {
          "description": "Whether the batch is processsed/released to get updated withdraw rate",
          "type": "boolean"
        },
        "time": {
          "description": "Time at which the unstake request was made",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    }
  }
}
